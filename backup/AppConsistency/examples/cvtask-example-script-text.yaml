#
# This is sample CvTask and CvTaskSet YAML, which shows how to use commandType:ScriptText
#
# This copies text in preBackupSnapshot.command to file /tmp/prehook and text postBackupSnapshot.command to /tmp/posthook
# /tmp/prehook is executed in container app-server in pod custom-app in namespace prod-db before snapshot is taken and return value saved in /tmp/pre.rc
# /tmp/posthook is executed in container app-server in pod custom-app in namespace prod-db after snapshot is taken and return value saved in /tmp/post.rc
# Return values of executed scripts will be placed at /tmp/pre.rc and /tmp/post.rc
#
apiVersion: k8s.cv.io/v1
kind: CvTask
metadata:
  name: cvtask002-scripttext
spec:
  preBackupSnapshot:
    CommandType: ScriptText
    command: |
      #!/bin/bash
      logfile=$1
      echo $(date) >> $logfile
      echo "Start pre-script execution" >> $logfile
      echo "Application quiesced successfully" >> $logfile
      echo "pre-script got called at ------- $(date) -------" >> $logfile
      exit 0
    args: [ "/tmp/app-consistency.log"]
  postBackupSnapshot:
    CommandType: ScriptText
    command: |
      #!/bin/bash
      logfile='/tmp/app-consistency.log'
      echo $(date) >> $logfile
      echo "Start post-script execution" >> $logfile
      echo "Application is un-quiesced successfully" >> $logfile
      echo "post-freeze got called at ------- $(date) -------" >> $logfile
      exit 0
    args: [ "/tmp/app-consistency.log"]
---
apiVersion: k8s.cv.io/v1
kind: CvTaskSet
metadata:
  name: cvtaskset001
  namespace: cv-config
spec:
  appName: app-db
  appNamespace: prod-db
  tasks:
  - id: testid0001
    cvTaskName: cvtask002-scripttext
    cvTaskNamespace: cv-config
    containerName: app-server
    podName: custom-app
    isDisabled: false
