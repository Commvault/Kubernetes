#
# This is sample CvTask and CvTaskSet YAML, which shows how to use commandType:ScriptText
#
# This copies text in preBackupSnapshot.command to file /tmp/prehook and text postBackupSnapshot.command to /tmp/posthook
# /tmp/prehook is executed in container app-server in pod custom-app in namespace prod-db before snapshot is taken and return value saved in /tmp/pre.rc
# /tmp/posthook is executed in container app-server in pod custom-app in namespace prod-db after snapshot is taken and return value saved in /tmp/post.rc
# Return values of executed scripts will be placed at /tmp/pre.rc and /tmp/post.rc
#
apiVersion: k8s.cv.io/v1
kind: CvTask
metadata:
  name: cvtaskname_placeholder
  namespace: cv-config
spec:
  preBackupSnapshot:
    commandType: ScriptText
    command: |
      #!/bin/bash
      logfile="/tmp/app-consistency.log"
      echo `date +"%Y-%m-%d %H:%M:%S"` "Started pre-script execution" >> $logfile
      result=$(psql -U postgres_username_placeholder -d postgres_db_name_placeholder -c 'ALTER DATABASE postgres_db_name_placeholder SET default_transaction_read_only = on;')
      result=$(psql -U postgres_username_placeholder -d postgres_db_name_placeholder -c "SELECT current_setting('default_transaction_read_only');")
      if [[ $result == *"on"* ]] ; then
         echo `date +"%Y-%m-%d %H:%M:%S"` "Application quiesced successfully.." >> $logfile
         exit 0
      else
         echo `date +"%Y-%m-%d %H:%M:%S"` "Error ! Application could not be quiesced" >> $logfile
         exit 1
      fi
  postBackupSnapshot:
    commandType: ScriptText
    command: |
      #!/bin/bash
      logfile='/tmp/app-consistency.log'
      echo `date +"%Y-%m-%d %H:%M:%S"` "Started post-script execution" >> $logfile
      result=$(psql -U postgres_username_placeholder -d postgres_db_name_placeholder -c 'BEGIN; SET TRANSACTION READ WRITE; ALTER DATABASE postgres_db_name_placeholder SET default_transaction_read_only = off; COMMIT;')
      result=$(psql -U postgres_username_placeholder -d postgres_db_name_placeholder -c "SELECT current_setting('default_transaction_read_only');")
      if [[ $result == *"off"* ]] ; then
         echo `date +"%Y-%m-%d %H:%M:%S"` "Application unquiesced successfully.." >> $logfile
         exit 0
      else
         echo `date +"%Y-%m-%d %H:%M:%S"` "Error ! Application cannot be unquiesced" >> $logfile
         echo `date +"%Y-%m-%d %H:%M:%S"` "Please unquiesce manually by running the following command:" >> $logfile
         echo "BEGIN; SET TRANSACTION READ WRITE; ALTER DATABASE postgres_db_name SET default_transaction_read_only = off; COMMIT;" >> $logfile
         exit  1
      fi
